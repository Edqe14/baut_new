generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model threadchannels {
  channel_id String @id @db.VarChar
}

model staff {
  role_id     String   @id
  permissions String[]
}

model log {
  channel_id String  @db.VarChar
  enabled    Boolean
  log_event  String  @id
}

model blacklistedlinks {
  link_id Int    @id @default(autoincrement())
  link    String @db.VarChar
}

model nolinkchannels {
  channel_id String @id @db.VarChar
}

model embeds {
  id      Int    @id @default(autoincrement())
  content String
}

model ShowcaseItem {
  id              Int                  @id @default(autoincrement())
  title           String               @db.VarChar
  description     String
  type            ShowcaseItemTypeEnum
  urls            String[]
  media           String[]
  collaboratorIds String[]
  creatorId       String
  upvoterIds      String[]
  downvotes       ShowcaseDownvote[]
  downvoterIds    String[]
  upvoteCount     Int
  downvoteCount   Int
  createdAt       DateTime
}

model ShowcaseDownvote {
  downvoterId    String        @id
  reason         String
  ShowcaseItem   ShowcaseItem? @relation(fields: [showcaseItemId], references: [id])
  showcaseItemId Int?
}

enum ShowcaseItemTypeEnum {
  STARTUP
  PROJECT
  COMMUNITY
  ARTICLE
  DESIGN
  TWEET
  OPEN_SOURCE
}

model Achievement {
  id          Int      @id @default(autoincrement())
  title       String   @db.VarChar
  description String
  creatorId   String
  media       String[]
  urls        String[]
  clappers    String[]
  clapCount   Int      @default(0)
}

model hacksParticipants {
  id          Int      @id @default(autoincrement())
  userIds       String[] @db.VarChar
  teamName     String   @db.VarChar
  audit1       DateTime?
  audit2       DateTime?
  audit3       DateTime?
}